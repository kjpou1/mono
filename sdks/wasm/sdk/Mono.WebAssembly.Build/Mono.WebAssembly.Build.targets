<Project>
	<UsingTask AssemblyFile="$(MSBuildThisFileDirectory)Mono.WebAssembly.Build.dll" TaskName="WasmLinkAssemblies" />
	<UsingTask AssemblyFile="$(MSBuildThisFileDirectory)Mono.WebAssembly.Build.dll" TaskName="WasmCreateRuntimeJs" />

	<PropertyGroup>
		<EnableDefaultWebContentItems Condition="'$(EnableDefaultWebContentItems)' == ''">True</EnableDefaultWebContentItems>
		<MonoWasmManagedOutputDirName Condition="'$(MonoWasmManagedOutputDirName)'==''">managed</MonoWasmManagedOutputDirName>
		<_MonoWasmManagedOutputDir>$(OutputPath)$(MonoWasmManagedOutputDirName)\</_MonoWasmManagedOutputDir>
		<MonoWasmIntermediateDir>$(IntermediateOutputPath)monowasm\</MonoWasmIntermediateDir>
		<MonoWasmLinkMode Condition="'$(MonoWasmLinkMode)'==''">SdkOnly</MonoWasmLinkMode>
		<MonoWasmI18n Condition="'$(MonoWasmI18n)'==''">None</MonoWasmI18n>
		<IncludeMonoWasmThreads Condition="'$(IncludeMonoWasmThreads)'==''">None</IncludeMonoWasmThreads>
		<MonoWasmI18n Condition="'$(MonoWasmI18n)'==''">None</MonoWasmI18n>
		<_MonoWasmRuntimeJs>$(OutputPath)runtime.js</_MonoWasmRuntimeJs>
		<_LoadThreadsRuntime>false</_LoadThreadsRuntime>
		<_AutoRuntimeLoading>false</_AutoRuntimeLoading>				
		<_MonoWasmDebugRuntime Condition="'$(MonoWasmRuntime)'==''">$(_DebugSymbolsProduced)</_MonoWasmDebugRuntime>
		<_MonoWasmDebugRuntime Condition="'$(MonoWasmRuntime)'=='Debug'">true</_MonoWasmDebugRuntime>
		<_MonoWasmDebugRuntime Condition="'$(MonoWasmRuntime)'=='Release'">false</_MonoWasmDebugRuntime>
	</PropertyGroup>

	<PropertyGroup>
		<CleanDependsOn>
			$(CleanDependsOn);
			_CleanManagedOutputDir;
		</CleanDependsOn>
	</PropertyGroup>

	<Target Name="_ValidateProjectProperties">
		<Error Text="The property MonoWasmRuntime is invalid.  Valid values are 'Debug' or 'Release'."
			Condition="'$(MonoWasmRuntime)'!='' and '$(MonoWasmRuntime)'!='Debug' and '$(MonoWasmRuntime)'!='Release'"
			Code="WASM0001"/>
		<Error Text="The property IncludeMonoWasmThreads is invalid.  Valid values are 'None', 'ThreadsOnly' or 'All'."
			Condition="'$(IncludeMonoWasmThreads)'!='' and '$(IncludeMonoWasmThreads)'!='None' and '$(IncludeMonoWasmThreads)'!='ThreadsOnly' and '$(IncludeMonoWasmThreads)'!='All'"
			Code="WASM0002"/>
		<Error Text="The property EnableAutoRuntimeLoading is invalid.  Valid values are 'True' or 'False'."
			Condition="'$(EnableAutoRuntimeLoading)'!='' and '$(EnableAutoRuntimeLoading)'!='True' and '$(EnableAutoRuntimeLoading)'!='False'"
			Code="WASM0003"/>
	</Target>

	<!-- suppress local copy for now, we don't want any local copied dlls -->
	<Target Name="CopyFilesToOutputDirectory" DependsOnTargets="MonoWasmCopyOutput" />

	<Target Name="MonoWasmCopyOutput" DependsOnTargets="_ValidateProjectProperties;_MonoWasmAssemblyCollectOutput;_MonoWasmLink">
		<Copy
				SourceFiles="@(_WasmOutput)"
				DestinationFiles="@(_WasmOutput->'$(OutputPath)%(TargetPath)')"
				SkipUnchangedFiles="True" />
	</Target>

	<Target Name="_MonoWasmAssemblyCollectOutput"
					AfterTargets="_CheckForCompileOutputs">

		<PropertyGroup Condition="('$(IncludeMonoWasmThreads)'=='All')">
			<_LoadThreadsRuntime>true</_LoadThreadsRuntime>
		</PropertyGroup>

		<PropertyGroup Condition="('$(EnableAutoRuntimeLoading)'=='true')">
			<_AutoRuntimeLoading>true</_AutoRuntimeLoading>
		</PropertyGroup>		

		<!-- 
			Make sure we set the runtime paths correctly.
			If running from a master build the runtime builds path is different
			from the nuget paths.

			FIXME should this be decoupled from whether managed symbols are produced?
		-->
		<PropertyGroup Condition="Exists('$(MonoWasmRuntimePath)builds\')">
			<_MonoWasmRuntimePath>$(MonoWasmRuntimePath)builds\release\</_MonoWasmRuntimePath>
			<_MonoWasmRuntimePath Condition="'$(_MonoWasmDebugRuntime)'=='true'">$(MonoWasmRuntimePath)builds\debug\</_MonoWasmRuntimePath>
			<_MonoWasmRuntimeThreadsPath>$(MonoWasmRuntimePath)builds\threads-release\</_MonoWasmRuntimeThreadsPath>
			<_MonoWasmRuntimeThreadsPath Condition="'$(_MonoWasmDebugRuntime)'=='true'">$(MonoWasmRuntimePath)builds\threads-debug\</_MonoWasmRuntimeThreadsPath>
		</PropertyGroup>

		<PropertyGroup Condition="!Exists('$(MonoWasmRuntimePath)builds\')">
			<_MonoWasmRuntimePath>$(MonoWasmRuntimePath)release\</_MonoWasmRuntimePath>
			<_MonoWasmRuntimePath Condition="'$(_MonoWasmDebugRuntime)'=='true'">$(MonoWasmRuntimePath)debug\</_MonoWasmRuntimePath>
			<_MonoWasmRuntimeThreadsPath>$(MonoWasmRuntimePath)threads-release\</_MonoWasmRuntimeThreadsPath>
			<_MonoWasmRuntimeThreadsPath Condition="'$(_MonoWasmDebugRuntime)'=='true'">$(MonoWasmRuntimePath)threads-debug\</_MonoWasmRuntimeThreadsPath>
		</PropertyGroup>

		<PropertyGroup Condition="'$(IncludeMonoWasmThreads)'=='true' And Exists('$(MonoWasmRuntimePath)builds\')">
			<_MonoWasmRuntimePath>$(MonoWasmRuntimePath)builds\threads-release\</_MonoWasmRuntimePath>
			<_MonoWasmRuntimePath Condition="'$(_MonoWasmDebugRuntime)'=='true'">$(MonoWasmRuntimePath)builds\threads-debug\</_MonoWasmRuntimePath>
		</PropertyGroup>

		<PropertyGroup Condition="'$(IncludeMonoWasmThreads)'=='true' And !Exists('$(MonoWasmRuntimePath)builds\')">
			<_MonoWasmRuntimePath>$(MonoWasmRuntimePath)threads-release\</_MonoWasmRuntimePath>
			<_MonoWasmRuntimePath Condition="'$(_MonoWasmDebugRuntime)'=='true'">$(MonoWasmRuntimePath)threads-debug\</_MonoWasmRuntimePath>
		</PropertyGroup>

		<ItemGroup>
			<_WasmOutput Include="$(_MonoWasmRuntimePath)mono.js" TargetPath="mono.js" />
			<_WasmOutput Include="$(_MonoWasmRuntimePath)mono.wasm" TargetPath="mono.wasm" />
			<_WasmOutput Include="$(_MonoWasmRuntimePath)mono.wasm.map" TargetPath="mono.wasm.map" Condition="'$(_MonoWasmDebugRuntime)'=='true'"/>
		</ItemGroup>

		<ItemGroup Condition="'$(IncludeMonoWasmThreads)'=='All'">
			<_WasmOutput Include="$(_MonoWasmRuntimeThreadsPath)mono.js" TargetPath="threads/mono.js" />
			<_WasmOutput Include="$(_MonoWasmRuntimeThreadsPath)mono.wasm" TargetPath="threads/mono.wasm" />
			<_WasmOutput Include="$(_MonoWasmRuntimeThreadsPath)mono.worker.js" TargetPath="threads/mono.worker.js"/>
			<_WasmOutput Include="$(_MonoWasmRuntimeThreadsPath)mono.wasm.map" TargetPath="threads/mono.wasm.map" Condition="'$(_MonoWasmDebugRuntime)'=='true'"/>
			<_WasmOutput Include="$(_MonoWasmRuntimeThreadsPath)mono.js.mem" TargetPath="threads/mono.js.mem" />
		</ItemGroup>

		<ItemGroup Condition="'$(IncludeMonoWasmThreads)'=='ThreadsOnly'">
			<_WasmOutput Include="$(_MonoWasmRuntimeThreadsPath)mono.js" TargetPath="mono.js" />
			<_WasmOutput Include="$(_MonoWasmRuntimeThreadsPath)mono.wasm" TargetPath="mono.wasm" />
			<_WasmOutput Include="$(_MonoWasmRuntimeThreadsPath)mono.worker.js" TargetPath="mono.worker.js"/>
			<_WasmOutput Include="$(_MonoWasmRuntimeThreadsPath)mono.wasm.map" TargetPath="mono.wasm.map" Condition="'$(_MonoWasmDebugRuntime)'=='true'"/>
			<_WasmOutput Include="$(_MonoWasmRuntimeThreadsPath)mono.js.mem" TargetPath="mono.js.mem" />
		</ItemGroup>

		<AssignTargetPath
			Files="@(Content)"
			RootFolder="$(MSBuildProjectDirectory)">
			<Output TaskParameter="AssignedFiles" ItemName="_WasmOutput" />
		</AssignTargetPath>

		<ItemGroup>
			<FileWrites Include="$(_MonoWasmRuntimeJs)" />
			<FileWrites Include="@(_WasmOutput->'$(OutputPath)%(TargetPath)')" />
		</ItemGroup>
	</Target>

	<Target Name="_MonoWasmLink"
					Inputs="@(IntermediateAssembly);@(ReferencePath);$(MSBuildAllProjects)"
					Outputs="$(_MonoWasmRuntimeJs);@(IntermediateAssembly->'$(_MonoWasmManagedOutputDir)%(Filename)%(Extension)')">
		<WasmLinkAssemblies
			RootAssembly="@(IntermediateAssembly)"
			Assemblies="@(ReferencePath)"
			RuntimeCopyLocalAssemblies="@(RuntimeCopyLocalItems)"
			FrameworkDir="$(MonoWasmFrameworkPath)"
			OutputDir="$(_MonoWasmManagedOutputDir)"
			LinkMode="$(MonoWasmLinkMode)"
			LinkSkip="$(MonoWasmLinkSkip)"
			Debug="$(_DebugSymbolsProduced)"
			I18n="$(MonoWasmI18n)"
			LinkDescriptions="@(LinkDescription)"
		/>

		<PropertyGroup>
			<_WasmHasBindingReference>@(ReferencePath->AnyHaveMetadataValue("Filename","WebAssembly.Bindings"))</_WasmHasBindingReference>
		</PropertyGroup>
		<!-- HACK this list should really come from the linker -->
		<ItemGroup>
			<_WasmOutputFiles Include="$(_MonoWasmManagedOutputDir)*.dll" />
			<_WasmOutputFiles Include="$(_MonoWasmManagedOutputDir)*.pdb" />
		</ItemGroup>
		<WasmCreateRuntimeJs
			DeployPrefix="$(MonoWasmManagedOutputDirName)"
			VfsPrefix="$(MonoWasmManagedOutputDirName)"
			InitBindings="$(_WasmHasBindingReference)"
			EnableDebugging="$(_DebugSymbolsProduced)"
			LoadThreadsRuntime="$(_LoadThreadsRuntime)"
			AutoRuntimeLoading="$(_AutoRuntimeLoading)"
			FileList="@(_WasmOutputFiles)"
			OutputFile="$(_MonoWasmRuntimeJs)"
		/>
  </Target>
	<Target Name = "_CleanManagedOutputDir">
		<ItemGroup>
			<FilesToDelete Include="$(_MonoWasmManagedOutputDir)**\*"/>
		</ItemGroup>   
    	<Delete Files="@(FilesToDelete)" />
	</Target>
</Project>
