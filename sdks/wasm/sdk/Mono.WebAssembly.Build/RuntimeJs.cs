//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mono.WebAssembly.Build {
    using System.Collections.Generic;
    using System;
    
    
    public partial class RuntimeJs : TemplateBase {
        
        
        #line 21 ""

public string VfsPrefix { get; set; }
public string DeployPrefix { get; set; }
public bool EnableDebugging { get; set; }
public bool ThreadsRuntimeAvailable { get; set; }
public bool AutoRuntimeLoading { get; set; }
public IEnumerable<string> FileList { get; set; }

        #line default
        #line hidden
        
        
        public override string TransformText() {
            this.GenerationEnvironment = null;

            #line 3 ""
            this.WriteLine("var Module = { ");
            this.WriteLine($"{(ThreadsRuntimeAvailable?"\tthreadsRuntimeAvailable: true, ": "\tthreadsRuntimeAvailable: false, ")}");
            this.WriteLine($"{(AutoRuntimeLoading?"\tenableAutoRuntimeLoading: true, ": "\tenableAutoRuntimeLoading: false, ")}");
            this.WriteLine("\tlocateMonoThreads: function (path, pref) {\n\t\treturn pref + path;\n\t},");
            this.WriteLine("\tlocateFile: function (path, pref) {");
            this.WriteLine("\t\tif (this.threadsRuntimeAvailable) {");
            this.WriteLine("\t\t\tif (typeof SharedArrayBuffer !== 'undefined') {");
            this.WriteLine("\t\t\t\tif (path.startsWith (\"mono.js\")) return this.locateMonoThreads (path, pref);");
            this.WriteLine("\t\t\t\tif (path.startsWith (\"mono.wasm\")) return this.locateMonoThreads (path, pref);");
            this.WriteLine("\t\t\t\tif (path === \"mono.worker.js\") return this.locateMonoThreads (path, pref);");
            this.WriteLine("\t\t\t}");
            this.WriteLine("\t\t\t\treturn pref + \"../\" + path;");
            this.WriteLine("\t\t}");
            this.WriteLine("\t\treturn pref + path;");
            this.WriteLine("\t},");
            this.Write("\tonRuntimeInitialized: function () {\n\t\tMONO.mono_load_runtime_and" +
                    "_bcl (\n\t\t\t\"");
            
            #line default
            #line hidden
            
            #line 20 ""
            this.Write(this.ToStringHelper.ToStringWithCulture(VfsPrefix??"managed"));
            
            #line default
            #line hidden
            
            #line 20 ""
            this.Write("\",\n\t\t\t\"");
            
            #line default
            #line hidden
            
            #line 21 ""
            this.Write(this.ToStringHelper.ToStringWithCulture(DeployPrefix??"managed"));
            
            #line default
            #line hidden
            
            #line 21 ""
            this.Write("\",\n\t\t\t");
            
            #line default
            #line hidden
            
            #line 22 ""
            this.Write(this.ToStringHelper.ToStringWithCulture(EnableDebugging?1:0));
            
            #line default
            #line hidden
            
            #line 22 ""
            this.Write(",\n\t\t\t[ \"");
            
            #line default
            #line hidden
            
            #line 23 ""
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Join("\", \"", FileList)));
            
            #line default
            #line hidden
            
            #line 23 ""
            this.Write("\" ],\n\t\t\tfunction () {\n");
            
            #line default
            #line hidden
            
            #line 25 ""
            
            #line default
            #line hidden
            
            #line 26 ""
            this.Write("\t\t\t\tApp.init ();\n\t\t\t}\n\t\t);\n\t},\n};\n\n\n");
            
            #line default
            #line hidden

            this.WriteLine("(function () {");
            this.WriteLine("\tif (Module.enableAutoRuntimeLoading) {");
            this.WriteLine("\t\tvar __mono_wasm_monoScript_js__ = document.createElement ('script'); __mono_wasm_monoScript_js__.type = 'text/javascript'; __mono_wasm_monoScript_js__.async = true; __mono_wasm_monoScript_js__.src = \"mono.js\";");
            this.WriteLine("\t\tvar __mono_wasm_monoScript__ = document.getElementsByTagName ('script')[0];");
            this.WriteLine("\t\tif (Module.threadsRuntimeAvailable && typeof SharedArrayBuffer !== 'undefined')");
            this.WriteLine("\t\t\t__mono_wasm_monoScript_js__.src = \"threads/mono.js\";");
            this.WriteLine("\t\t__mono_wasm_monoScript__.parentNode.insertBefore (__mono_wasm_monoScript_js__, __mono_wasm_monoScript__);");
            this.WriteLine("\t}");
            this.WriteLine("}) ();");

            return this.GenerationEnvironment.ToString();
        }
        
        public override void Initialize() {
            base.Initialize();
        }
    }
}
